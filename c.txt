#include <stdio.h>

int maxProfit(int prices[], int n) {
    int a1[n], a2[n];
    int min_price = prices[0];
    for (int i = 0; i < n; i++) {
        a1[i] = (i == 0) ? 0 : (a1[i-1] > prices[i] - min_price ? a1[i-1] : prices[i] - min_price);
        min_price = min_price < prices[i] ? min_price : prices[i];
    }
    int max_price = prices[n-1];
    for (int i = n-1; i >= 0; i--) {
        a2[i] = (i == n-1) ? 0 : (a2[i+1] > max_price - prices[i] ? a2[i+1] : max_price - prices[i]);
        max_price = max_price > prices[i] ? max_price : prices[i];
    }
    int max_profit = 0;
    for (int i = 0; i < n; i++) {
        int curr_profit = a1[i] + a2[i];
        max_profit = curr_profit > max_profit ? curr_profit : max_profit;
    }
    return max_profit;
}

int main() {
    int prices_month1[] = {3,3,5,0,0,3,1,4};
    int n1 = sizeof(prices_month1) / sizeof(prices_month1[0]);
    printf("%d\n", maxProfit(prices_month1, n1));
    int prices_month2[] = {1,2,3,4,5};
    int n2 = sizeof(prices_month2) / sizeof(prices_month2[0]);
    printf("%d\n", maxProfit(prices_month2, n2));
    int prices_month3[] = {7,6,4,3,1};
    int n3 = sizeof(prices_month3) / sizeof(prices_month3[0]);
    printf("%d\n", maxProfit(prices_month3, n3));

    return 0;
}
